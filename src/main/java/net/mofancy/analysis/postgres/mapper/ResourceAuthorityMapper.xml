<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.mofancy.analysis.postgres.mapper.ResourceAuthorityMapper">
  <resultMap id="BaseResultMap" type="net.mofancy.analysis.postgres.persistence.ResourceAuthority">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="authority_id" jdbcType="INTEGER" property="authorityId" />
    <result column="authority_type" jdbcType="VARCHAR" property="authorityType" />
    <result column="resource_id" jdbcType="INTEGER" property="resourceId" />
    <result column="resource_type" jdbcType="VARCHAR" property="resourceType" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="net.mofancy.analysis.postgres.persistence.ResourceAuthority">
    <result column="path" jdbcType="LONGVARCHAR" property="path" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, authority_id, authority_type, resource_id, resource_type, parent_id, description, 
    create_time, create_user
  </sql>
  <sql id="Blob_Column_List">
    path
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="net.mofancy.analysis.postgres.persistence.ResourceAuthorityExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from base_resource_authority
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="net.mofancy.analysis.postgres.persistence.ResourceAuthorityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from base_resource_authority
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from base_resource_authority
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from base_resource_authority
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="net.mofancy.analysis.postgres.persistence.ResourceAuthority">
    insert into base_resource_authority (id, authority_id, authority_type, 
      resource_id, resource_type, parent_id, 
      description, create_time, create_user, 
      path)
    values (#{id,jdbcType=INTEGER}, #{authorityId,jdbcType=INTEGER}, #{authorityType,jdbcType=VARCHAR}, 
      #{resourceId,jdbcType=INTEGER}, #{resourceType,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{path,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="net.mofancy.analysis.postgres.persistence.ResourceAuthority">
    insert into base_resource_authority
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="authorityId != null">
        authority_id,
      </if>
      <if test="authorityType != null">
        authority_type,
      </if>
      <if test="resourceId != null">
        resource_id,
      </if>
      <if test="resourceType != null">
        resource_type,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="path != null">
        path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="authorityId != null">
        #{authorityId,jdbcType=INTEGER},
      </if>
      <if test="authorityType != null">
        #{authorityType,jdbcType=VARCHAR},
      </if>
      <if test="resourceId != null">
        #{resourceId,jdbcType=INTEGER},
      </if>
      <if test="resourceType != null">
        #{resourceType,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update base_resource_authority
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.authorityId != null">
        authority_id = #{record.authorityId,jdbcType=INTEGER},
      </if>
      <if test="record.authorityType != null">
        authority_type = #{record.authorityType,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceId != null">
        resource_id = #{record.resourceId,jdbcType=INTEGER},
      </if>
      <if test="record.resourceType != null">
        resource_type = #{record.resourceType,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update base_resource_authority
    set id = #{record.id,jdbcType=INTEGER},
      authority_id = #{record.authorityId,jdbcType=INTEGER},
      authority_type = #{record.authorityType,jdbcType=VARCHAR},
      resource_id = #{record.resourceId,jdbcType=INTEGER},
      resource_type = #{record.resourceType,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update base_resource_authority
    set id = #{record.id,jdbcType=INTEGER},
      authority_id = #{record.authorityId,jdbcType=INTEGER},
      authority_type = #{record.authorityType,jdbcType=VARCHAR},
      resource_id = #{record.resourceId,jdbcType=INTEGER},
      resource_type = #{record.resourceType,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.mofancy.analysis.postgres.persistence.ResourceAuthority">
    update base_resource_authority
    <set>
      <if test="authorityId != null">
        authority_id = #{authorityId,jdbcType=INTEGER},
      </if>
      <if test="authorityType != null">
        authority_type = #{authorityType,jdbcType=VARCHAR},
      </if>
      <if test="resourceId != null">
        resource_id = #{resourceId,jdbcType=INTEGER},
      </if>
      <if test="resourceType != null">
        resource_type = #{resourceType,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="net.mofancy.analysis.postgres.persistence.ResourceAuthority">
    update base_resource_authority
    set authority_id = #{authorityId,jdbcType=INTEGER},
      authority_type = #{authorityType,jdbcType=VARCHAR},
      resource_id = #{resourceId,jdbcType=INTEGER},
      resource_type = #{resourceType,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      path = #{path,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.mofancy.analysis.postgres.persistence.ResourceAuthority">
    update base_resource_authority
    set authority_id = #{authorityId,jdbcType=INTEGER},
      authority_type = #{authorityType,jdbcType=VARCHAR},
      resource_id = #{resourceId,jdbcType=INTEGER},
      resource_type = #{resourceType,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getAuthorityElement" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT e.id,e.type,e.name,(
		SELECT COALESCE(t.id) FROM (SELECT ra.id FROM base_resource_authority ra  WHERE
		ra.resource_id = e.id 
		AND ra.authority_type = #{authorityType} 
		AND ra.authority_id = #{authorityId}
		UNION ALL SELECT -1) t LIMIT 1
	) AS resource_id  FROM base_element e WHERE menu_id = #{menuId}
  </select>
</mapper>